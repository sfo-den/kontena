# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"
require 'yaml'

required_plugins = %w( vagrant-reload )
required_plugins.each do |plugin|
  system "vagrant plugin install #{plugin}" unless Vagrant.has_plugin? plugin
end

if File.exists?('./.kontena-secrets')
  secrets = YAML::load(File.read('./.kontena-secrets'))
else
  secrets = {}
end
secrets[:grid_token] = SecureRandom.base64(64) unless secrets[:grid_token]

File.write('./.kontena-secrets', YAML::dump(secrets))

kernel_provision_script = <<SCRIPT
export DEBIAN_FRONTEND=noninteractive
sudo apt-get update
sudo apt-get install -y -q linux-headers-generic-lts-vivid linux-image-generic-lts-vivid
SCRIPT

server_provision_script = <<SCRIPT
export DEBIAN_FRONTEND=noninteractive
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
wget -qO - https://bintray.com/user/downloadSubjectPublicKey?username=bintray | sudo apt-key add -
sudo echo deb https://get.docker.com/ubuntu docker main > /etc/apt/sources.list.d/docker.list
sudo echo deb http://dl.bintray.com/kontena/kontena-testing trusty main > /etc/apt/sources.list.d/kontena.list
sudo apt-get update

# install docker
sudo apt-get install -y -q lxc-docker

# install kontena-server
sudo apt-get install -y -q --force-yes kontena-server

sudo restart docker
sudo sleep 3
sudo docker exec -d kontena-server-api bundle exec ruby -r "./app/boot.rb" -e "grid = Grid.find_or_create_by(name: 'demo'); grid.update_attributes(token: '%s', initial_size: 2); user = User.find_or_create_by(email: '%s'); user.grids << grid unless user.grids.include?(grid)"
sudo gpasswd -a vagrant docker
SCRIPT

agent_provision_script = <<SCRIPT
export DEBIAN_FRONTEND=noninteractive
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
wget -qO - https://bintray.com/user/downloadSubjectPublicKey?username=bintray | sudo apt-key add -
sudo echo deb https://get.docker.com/ubuntu docker main > /etc/apt/sources.list.d/docker.list
sudo echo deb http://dl.bintray.com/kontena/kontena-testing trusty main > /etc/apt/sources.list.d/kontena.list
sudo apt-get update
sudo apt-get install -y -q lxc-docker
echo kontena-agent kontena-agent/server_uri string ws://192.168.66.100:8080 | debconf-set-selections
echo kontena-agent kontena-agent/grid_token string $1 | debconf-set-selections
sudo apt-get install -q -y --force-yes kontena-agent
sudo restart docker
sudo gpasswd -a vagrant docker
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define "master" do |docker|
    docker.vm.box = "ubuntu/trusty64"
    docker.vm.network "private_network", ip: "192.168.66.100"
    docker.vm.hostname = "master"
    docker.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.customize ["modifyvm", :id, "--memory", "512"]
      vb.auto_nat_dns_proxy = false
      vb.customize ["modifyvm", :id, "--natdnsproxy1", "off" ]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "off" ]
    end
    docker.vm.provision "shell", inline: kernel_provision_script
    docker.vm.provision :reload
    docker.vm.provision "shell", inline: (server_provision_script % [secrets[:grid_token], ENV['EMAIL']])
  end

  2.times do |i|
    node_number = i + 1
    config.vm.define "node_#{node_number}" do |docker|
      docker.vm.box = "ubuntu/trusty64"
      docker.vm.network "private_network", ip: "192.168.66.#{node_number + 1}"
      docker.vm.hostname = "node-#{node_number}"
      docker.vm.provider "virtualbox" do |vb|
        vb.gui = false
        vb.customize ["modifyvm", :id, "--memory", "768"]
        vb.auto_nat_dns_proxy = false
        vb.customize ["modifyvm", :id, "--natdnsproxy1", "off" ]
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "off" ]
      end
      docker.vm.provision "shell", inline: kernel_provision_script
      docker.vm.provision :reload
      docker.vm.provision "shell", inline: agent_provision_script, args: [
        secrets[:grid_token]
      ]
    end

  end

end
